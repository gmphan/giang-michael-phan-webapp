@model HomeView
@{
    ViewData["Title"] = "Home";
    var quoteCollections = Model.QuoteCollections;
}
<div class="row justify-content-center">
    <div class="col-lg-10 col-md-12">
        <div class="card mb-3">
            <h1 class="card-header">Giang Michael Phan</h1>
            <div class="card-body">
                <h5 class="card-title">Software Engineer</h5>
                <h6 class="card-subtitle text-muted"><i>Full Stack Developer with a Passion for Building User-Friendly Applications</i></h6>
            </div>

            <!-- Blockquote container for quotes -->
            <!-- Adding media within site.css to resize the font-->
            <figure class="text-center" id="quote-slideshow" style="background-color: #c05131; color: white; height: 200px; display: flex; flex-direction: column; justify-content: center;">
                <blockquote class="blockquote">
                    <p id="quoteLine" class="mb-0">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                </blockquote>
                <figcaption id="authorLine" class="blockquote-footer" style="color: beige">
                    Someone famous in <cite title="Source Title">Source Title</cite>
                </figcaption>
            </figure>

            <div class="card-body">
                <p class="card-text">Will be a summary</p>
            </div>
            
            <div class="card-footer text-muted">
                2 days ago
            </div>
        </div>
    </div>
</div>
@section Scripts{
   <script>
        // Assuming the quoteCollection is passed from Razor to JavaScript via JSON
        var quoteCollection = @Html.Raw(Json.Serialize(quoteCollections));

        // Current index of the displayed quote
        var currentIndex = 0;

        // Function to show the current quote
        function showQuote(index) {
            const quoteTextElement = document.getElementById("quoteLine");
            const authorLineElement = document.getElementById("authorLine");
            const quote = quoteCollection[index];

            // Set quote and author text
            quoteTextElement.textContent = `"${quote.quote}"`;
            authorLineElement.textContent = `${quote.author}`;
        }

        // Slideshow function that rotates the quotes
        function startSlideshow() {
            showQuote(currentIndex);
            currentIndex = (currentIndex + 1) % quoteCollection.length; // Loop back to the first quote
            setTimeout(startSlideshow, 3000); // Change quote every 3 seconds
        }

        // Start the slideshow when the page loads
        window.onload = function() {
            if (quoteCollection.length > 0) {
                startSlideshow();
            } else {
                console.log("No quotes available.");
            }
        };
    </script>
}