@model HomeView
@{
    ViewData["Title"] = "Home";
    var quoteCollections = Model.QuoteCollections;
}
<div class="card mb-3">
    <h3 class="card-header">Giang Michael Phan</h3>
    <div class="card-body">
        <h5 class="card-title">Software Engineer</h5>
        <h6 class="card-subtitle text-muted"><i>Full Stack Developer with a Passion for Building User-Friendly Applications</i></h6>
    </div>
    <svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" 
        focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle">
        <rect width="100%" height="100%" fill="#868e96"></rect>
        <text id="quoteText" x="50%" y="50%" fill="white" dy=".3em"></text>
    </svg>
    <div class="card-body">
        <p class="card-text">Will be a summary</p>
    using Gmphan.ModelLib.ViewModels;
    </div>
    <ul class="list-group list-group-flush">
        <li class="list-group-item">Cras justo odio</li>
        <li class="list-group-item">Dapibus ac facilisis in</li>
        <li class="list-group-item">Vestibulum at eros</li>
    </ul>
    <div class="card-body">
        <a href="#" class="card-link">Card link</a>
        <a href="#" class="card-link">Another link</a>
    </div>
    <div class="card-footer text-muted">
        2 days ago
    </div>
</div>
<div class="card">
  <div class="card-body">
    <h4 class="card-title">Card title</h4>
    <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="card-link">Card link</a>
    <a href="#" class="card-link">Another link</a>
  </div>
</div>
@section Scripts{
    <script>
        // Assuming quoteCollection is passed from Razor to JavaScript via JSON
        var quoteCollection = @Html.Raw(Json.Serialize(quoteCollections));
        //console.log("Quotes:", quoteCollection); // Debugging log

        // Current index of the displayed quote
        var currentIndex = 0;

        // Function to show the current quote in the SVG
        function showQuote(index) {
            const quoteTextElement = document.getElementById("quoteText");
            const quote = quoteCollection[index];
            //console.log("Displaying quote:", quote); // Debug log
            quoteTextElement.textContent = quote.quote;
            //console.log("Quote:", quoteTextElement.textContent)
        }

        // Slideshow function that rotates the quotes
        function startSlideshow() {
            showQuote(currentIndex);
            currentIndex = (currentIndex + 1) % quoteCollection.length; // Loop back to the first quote
            setTimeout(startSlideshow, 3000); // Change quote every 3 seconds
        }

        // Start the slideshow when the page loads
        window.onload = function() {
            if (quoteCollection.length > 0) {
                startSlideshow();
            } else {
                console.log("No quotes available.");
            }
        };
    </script>
}