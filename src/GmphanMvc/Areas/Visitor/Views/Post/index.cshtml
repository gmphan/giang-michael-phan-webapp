@model PostMetaView
@{
    ViewData["Title"] = "Posts";
    var count = 100;
    var index = 0;
    var postMetaData = @Model.PostMetaDTOs;
    var aboutThePostId = 0;
}

<!--Remind to login before doing anything--->

<div class="row justify-content-center">
    <div class="col-lg-10 col-md-12">
        <div class="card mb-3">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h1>Posts </h1>
                <small>
                    <a asp-area="Visitor" asp-controller="Post"  asp-action="Create" class="btn btn-primary mx-2"> 
                        <i class="bi bi-plus-square"> New Post</i>
                    </a>
                </small>
            </div>
            <div class="card-body">
                <div class="accordion" id="accordionExample">
                   
                    @foreach (var item in postMetaData)
                    {
                        var headingId = $"heading{item.Id}";
                        var collapseId = $"collapse{item.Id}";
                        
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="@headingId">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="true" aria-controls="@collapseId" onclick="LoadPostDetail(@item.Id)">
                                    @item.Title
                                </button>
                            </h2>

                            <!-- need to show the content if the title is About The Posts -->
                            @if (item.Title == "About The Posts")
                            {
                                aboutThePostId = item.Id;
                                
                                <div id="@collapseId" class="accordion-collapse collapse show" aria-labelledby="@headingId" data-bs-parent="#accordionExample">
                                    <div class="accordion-body" id="accordingBody-@item.Id">
                                        <!---content below will be replace with AJAX responded data
                                        The responded data is the _Detail partial view which combined at return of controller level
                                        -->
                                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                                    </div>
                                </div>
                                
                            }
                            else
                            {
                                <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#accordionExample">
                                    <div class="accordion-body" id="accordingBody-@item.Id">
                                        <!---content below will be replace with AJAX responded data
                                        The responded data is the _Detail partial view which combined at return of controller level
                                        -->
                                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                                    </div>
                                </div>
                            } 
                        </div>
                        
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function LoadPostDetail(postId) {
            fetch(`/Visitor/Post/GetPostDetail/${postId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok " + response.statusText);
                    }
                    return response.text();
                })
                .then(data => {
                    // Update the accordion body content with the fetched data/ _Detail partial view
                    document.getElementById(`accordingBody-${postId}`).innerHTML = data;
                })
                .catch(error => {
                    console.error('Error fetching post detail: ', error)
                });
        }
    </script>

    <!-- call the AJAX right away to display About the Posts 
     This is have to be here after the LoadPostDetail function.
    -->
    <script>
        $(document).ready(function() {
            LoadPostDetail(@aboutThePostId);
        });
    </script>
    
}